<?php

/**
 * Implements hook_page_alter().
 */
function geopolis_xiti_page_alter(&$vars) {
  global $theme;
  global $user;
  $front_theme = variable_get('theme_default', '');
  if ($front_theme == $theme && !geopolis_site_is_ajax()) {
    // Set params.
    $libpath = url(drupal_get_path('theme', 'geopolis') . '/scripts/xtcore.js');
    $xtsd = empty($_SERVER['HTTPS']) ? 'http://logc238' : 'http://logs1238';
    $xtsite = variable_get('geopolis_xiti_xtsite', 508428);
    $xtn2 = variable_get('geopolis_xiti_xt2', 5);
    $xtpage = (drupal_strtolower(geopolis_get_xtpage())) ? drupal_strtolower(geopolis_get_xtpage()) : '';
    $x1 = (user_is_logged_in()) ? 1 : 2;
    $tags = geopolis_get_xttags();
    $xt_an = (!empty($user->uid)) ? $user->uid : 0;

    $search_args = drupal_static('geopolis_site_search');

    $noscript = '<img width="1" height="1" alt="" src="' . $xtsd . '.xiti.com/hit.xiti?s=' . $xtsite . '&s2=' . $xtn2 . '&p=' . $xtpage . '&an=' . $xt_an . '&x1=' . $x1 . '&tag=' . $tags;

    // Build search params
    $search_arg = (!empty($search_args['arg'])) ? $search_args['arg'] : '';
    $search_page_num = (!empty($search_args['page_num'])) ? $search_args['page_num'] : '';
    $search = "
    var xt_mtcl = '$search_arg';
    var xt_npg = '$search_page_num';";

    // Add search params into noscript.
    if (!empty($search_args)) {
      $noscript .= '&mc=' . $search_args['arg'] . '&np=' . $search_args['page_num'];
    }

    $noscript .= '" >';
    $vars['page_bottom']['xiti']['#markup'] = <<<HTML
    <script type="text/javascript">
      <!--
      var xtnv = document;
      var xtsd = "$xtsd";
      var xtsite = $xtsite;
      var xtn2 = "$xtn2";
      var xtpage = "$xtpage";
      var xtdi = '';        //implication degree
      var xt_multc = "&x1=$x1";  //all the xi indicators (like '&x1=...&x2=....&x3=...')
      var xt_an = "$xt_an";        //user ID
      var xt_ac = '';        //category ID
      var xt_pagetype = 'x-x-x';
      var xt_tags = "$tags";
      var xt_form = '';
      $search
      /* Do not modify below. */
      if (window.xtparam!=null){window.xtparam+='&tag='+xt_tags+'&mc='+xt_mtcl+'&np='+xt_npg+'&ac='+xt_ac+'&an='+xt_an+xt_multc;}
      else{window.xtparam='&tag='+xt_tags+'&mc='+xt_mtcl+'&np='+xt_npg+'&ac='+xt_ac+'&an='+xt_an+xt_multc;};
      //-->
    </script>
    <script type="text/javascript" src="$libpath"></script>

    <noscript>
      $noscript
    </noscript>
HTML;
  }
}

/**
 * Get value for xtpage.
 */
function geopolis_get_xtpage() {

  // Home page.
  if ($_GET['q'] == '<front>') {
    return 'Home-liste::Accueil-Geopolis';
  }
  // Search result.
  elseif (preg_match('/search\/content/', $_GET['q'])) {
    return 'divers::recherche::resultats_recherche';
  }
  // Taxonomy term.
  elseif (preg_match('/taxonomy\/term/', $_GET['q'])) {
    $term = taxonomy_term_load(arg(2));
    if ($term) {
      switch ($term->vocabulary_machine_name) {

        case 'thematic':
          $terms = geopolis_xiti_get_xtpage_hierarchy($term);
          $prefix = '';
          for ($i = 1; $i < count($terms); $i++) {
            $prefix .= 'sous-';
          }
          return 'topic::topic-thematique::' . $terms[0] . '::' . $prefix . 'thematique-' . end($terms);
          break;

        case 'place':
          $voc = taxonomy_vocabulary_machine_name_load('place');
          $tree = taxonomy_get_tree($voc->vid, 0, 1);
          // Process continents.
          foreach ($tree as $branch) {
            if ($branch->tid == $term->tid) {
              return 'topic::topic-localite::' . check_plain($term->name) . '::continent-' . check_plain($term->name);
            }
          }
          // Process countries.
          $continent = reset(taxonomy_get_parents($term->tid));
          return 'topic::topic-localite::' . check_plain($continent->name) . '::pays-' . check_plain($term->name);
          break;

        case 'institution':
          return 'topic::topic-institution::institution-' . check_plain($term->name);
          break;
      }
    }
  }
  // List of all articles.
  elseif ($_GET['q'] == 'tous-les-articles') {
    return 'Home-liste::liste-articles';
  }
  // List of all links.
  elseif ($_GET['q'] == 'tous-les-liens') {
    return 'Home-liste::liste-liens';
  }
  elseif (preg_match('/node\/[0-9]{1,}/', $_GET['q'])) {
    $node = node_load(arg(1));
    if ($node) {
      // Process article.
      if ($node->type == 'article') {
        // Main media.
        if (!empty($node->field_article_main_media)) {
          if ($main_media = field_get_items('node', $node, 'field_article_main_media')) {
            $asset = reset(entity_load('asset', array($main_media[0]['target_id'])));
            if ($asset->type == 'video') {
              return 'Contenus::articles::video-media-principal::' . geopolis_xiti_build_alias($node);
            }
            elseif ($asset->type == 'diaporama') {
              return 'Contenus::diaporamas::' . check_plain($asset->title);
            }
          }
        }
        // Video in body.
        if (!empty($node->field_body)) {
          $body = field_get_items('node', $node, 'field_body');
          $body = check_markup($body[0]['value'], $body[0]['format']);
          @$preview = geopolis_site_emvideo_parse($body);
          if (!empty($preview['snapshot'])) {
            return 'Contenus::articles::contenant-video::' . geopolis_xiti_build_alias($node);
          }
          else {
            return 'Contenus::articles::sans-video::' . geopolis_xiti_build_alias($node);
          }
        }
        else {
          return 'Contenus::articles::sans-video::' . geopolis_xiti_build_alias($node);
        }
      }
      // Process simple pages.
      elseif ($node->type == 'page') {
        return "divers::annexes::mentions_legales";
      }
    }
  }
  else {
    $item = menu_get_item();

    $query = str_replace(base_path(), '', $_SERVER['REQUEST_URI']);
    if ($item['access'] === FALSE || $item['path'] === 'page-403') {
      return 'erreur::' . $query . '_403';
    }
    elseif ($item === FALSE || $item['path'] === 'page-404') {
      return 'erreur::' . $query . '_404';
    }
  }
}

/**
 * Get value for xttags().
 */
function geopolis_get_xttags() {

  // Node.
  if (arg(0) === 'node' && is_numeric(arg(1))) {
    $node = menu_get_object();
    if ($node && $node->type == 'article') {
      // Add place tags.
      $place = field_get_items('node', $node, 'field_places');
      $tags = geopolis_xiti_get_place_tags($place);
      // Add thematique tags.
      $thematique = field_get_items('node', $node, 'field_thematics');
      $thematique_tags = array();
      foreach ($thematique as $them) {
        $term = taxonomy_term_load($them['target_id']);
        if ($term) {
          $thematique_tags[] = "[$term->name]";
        }
      }
      $tags['thematique'] = implode('|', $thematique_tags);
      // Add institution tags.
      $institution = field_get_items('node', $node, 'field_institutions');
      $institution_tags = array();
      foreach ($institution as $inst) {
        $term = taxonomy_term_load($inst['target_id']);
        if ($term) {
          $institution_tags[] = "[$term->name]";
        }
      }
      $tags['institution'] = implode('|', $institution_tags);
      // Remove empty items.
      foreach ($tags as $id => $tag) {
        if (empty($tag)) {
          unset($tags[$id]);
        }
      }
      return drupal_strtolower(implode('|', $tags));
    }
  }
  // Taxonomy term.
  if (arg(0) === 'taxonomy' && arg(1) === 'term' && is_numeric(arg(2))) {
    $term = taxonomy_term_load(arg(2));
    if (in_array($term->vocabulary_machine_name, array('thematic' , 'place'))) {
      return geopolis_xiti_get_xttags_hierarchy($term);
    }
    elseif ('institution') {
      $return = geopolis_xiti_get_xttags_hierarchy($term);
      if ($place = field_get_items('taxonomy_term', $term, 'field_country')) {
        $term = taxonomy_term_load($place[0]['tid']);
        if (!empty($term)) {
          $place_tags = geopolis_xiti_get_xttags_hierarchy(taxonomy_term_load($place[0]['tid']));
          $return = $place_tags . '|' . $return;
        }
      }
      return $return;
    }
  }
}

/**
 * Build tags for continent/pays/region.
 */
function geopolis_xiti_get_place_tags($field) {
  $voc = taxonomy_vocabulary_machine_name_load('place');
  $tree = taxonomy_get_tree($voc->vid);
  $tags = array();
  foreach ($field as $term) {
    foreach ($tree as $branch) {
      if ($term['tid'] == $branch->tid && ($branch->depth >= 0 || $branch->depth <= 2)) {
        // Add continent, pays, region.
        $tags[] = "[$branch->name]";
      }
    }
  }

  return $tags;
}

/**
 * Get tag and his childrens,
 */
function geopolis_xiti_get_xttags_hierarchy($term) {
  $tags = array();
  $terms = taxonomy_get_parents_all($term->tid);
  foreach ($terms as $trm) {
    $tags[] = "[$trm->name]";
  }
  $tags = array_reverse($tags);
  return drupal_strtolower(implode('|', $tags));
}


/**
 * Get tag and his childrens,
 */
function geopolis_xiti_get_xtpage_hierarchy($term) {
  $tags = array();
  $terms = taxonomy_get_parents_all($term->tid);
  foreach ($terms as $trm) {
    $tags[] = check_plain($trm->name);
  }
  return array_reverse($tags);
}

/**
 * Return alias of node for xiti.
 */
function geopolis_xiti_build_alias($node) {
  $op = 'update';
  $source = 'node/' . $node->nid;
  $data = array('node' => $node);
  $language = 'fr';
  // Retrieve and apply the pattern for this content type.
  $pattern = '[node:title]-[node:nid]';

  module_load_include('inc', 'pathauto', 'pathauto');

  // Replace any tokens in the pattern. Uses callback option to clean replacements. No sanitization.
  $alias = token_replace($pattern, $data, array(
    'sanitize' => FALSE,
    'clear' => TRUE,
    'callback' => 'pathauto_clean_token_values',
    'language' => (object) array('language' => $language),
    'pathauto' => TRUE,
  ));

  $alias = pathauto_clean_alias($alias);

  // Build the new path alias array and send it off to be created.
  $path = array(
    'source' => $source,
    'alias' => $alias,
    'language' => $language,
  );

  return $path['alias'];
}

