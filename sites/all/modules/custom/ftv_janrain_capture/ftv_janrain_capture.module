<?php

/**
 * @file
 * This module provides additional France Televisions specific features.
 *
 * @see http://www.janrain.com/products/capture
 */

/**
 * Implements hook_menu().
 */
function ftv_janrain_capture_menu() {
  $items['janrain_capture/user'] = array(
    'title' => 'FTV Janrain Capture - Check User ',
    'page callback' => 'ftv_janrain_capture_user',
    'theme callback' => 'ajax_base_page_theme',
    'delivery callback' => 'ajax_deliver',
    'access callback' => TRUE,
    'description' => 'Ajax callback for FTV Janrain Capture user.',
    'type' => MENU_CALLBACK,
    'file' => 'ftv_janrain_capture.ajax.inc',
  );
  $items['janrain_capture/user-logout'] = array(
    'title' => 'Log out',
    'page callback' => 'ftv_janrain_capture_logout',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'ftv_janrain_capture.pages.inc',
  );
  // $items['janrain_capture/new-account'] = array(
  //   'title' => 'New account',
  //   'page callback' => 'theme',
  //   'page arguments' => array('ftv_janrain_capture_new_account'),
  //   'delivery callback' => 'ftv_janrain_capture_popin',
  //   'access callback' => 'user_is_logged_in',
  //   'description' => 'Welcome screen for new user created.',
  //   'type' => MENU_CALLBACK,
  //   'file' => 'ftv_janrain_capture.pages.inc',
  // );

  return $items;
}

/**
 * Implements hook_block_info().
 */
function ftv_janrain_capture_block_info() {
  $blocks['ftv_janrain_capture_connection'] = array(
    'info' => t('FTV Janrain Connection Block'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function ftv_janrain_capture_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'ftv_janrain_capture_connection':
      // Prepare signin and register links.
      $signin_link = ftv_janrain_capture_signin_link();
      $user_links_anonymous[] = drupal_render($signin_link);

      // Add link to register form if user can is allowed to create account.
      if (user_register_access()) {
        $register_link = ftv_janrain_capture_register_link();
        $user_links_anonymous[] = drupal_render($register_link);
      }
      $user_links_anonymous = theme('item_list', array('items' => $user_links_anonymous));

      // Prepare profile and logout links.
      $profile_link = ftv_janrain_capture_profile_link();
      $user_links_authenticated = array(
        drupal_render($profile_link),
        ftv_janrain_capture_render_logout_link(),
      );
      $user_links_authenticated = theme('item_list', array('items' => $user_links_authenticated));

      // Add stylesheet and javascript
      drupal_add_js(drupal_get_path('module', 'ftv_janrain_capture') . '/js/ftv_janrain_capture.js');
      drupal_add_css(drupal_get_path('module', 'ftv_janrain_capture') . '/css/ftv_janrain_capture.css');

      $block['content'] = theme('ftv_janrain_capture_connection', array(
        'user_links_anonymous'     => $user_links_anonymous,
        'user_links_authenticated' => $user_links_authenticated,
        )
      );
      break;
  }
  return $block;
}

/**
 * Act on users when authenticated.
 *
 * This hook is executed immediately after the user authentication method is
 * processed but before the page is rendered. Modules may use this to act on
 * user data received during authentication.
 *
 * @param array $capture_profile
 *   The profile data returned from the user's Capture record
 * @param array $account
 *   The local Drupal user account being authenticated
 * @param boolean $new_user
 *   TRUE if this is the users first time to this site
 */
function ftv_janrain_capture_janrain_capture_user_authenticated($capture_profile, $account, $new_user) {
  // Store in session Janrain Capture username
  // Used to retrieve Hi username.
  $_SESSION['janrain_capture_displayname'] = $capture_profile['displayName'];
  $_SESSION['janrain_capture_id'] = $capture_profile['id'];
  // Get the first picture (small format) provided by Janrain if available.
  if (isset($capture_profile['photos'][0]['value']) && !empty($capture_profile['photos'][0]['value'])) {
    $_SESSION['janrain_capture_photo'] = $capture_profile['photos'][0]['value'];
  }

  // if new user add janrain role
  if ($new_user) {
    $janrain_role_name = variable_get('ftv_janrain_capture_role', '');
    if (!empty($janrain_role_name)) {
      $role = user_role_load_by_name($janrain_role_name);
      // Assign new user the "Janrain" role.
      db_insert('users_roles')
        ->fields(array('uid' => $account->uid, 'rid' => $role->rid))
        ->execute();
    }

    // set originId for the new user
    if (array_key_exists('origin_id', $capture_profile) && empty($capture_profile['origin_id'])) {
      $user_created = format_date(strtotime($capture_profile['created']), 'custom', 'Y-m-d');
      $today = format_date(time(), 'custom', 'Y-m-d');

      // A bit ugly to test like that...
      // Normally, we need to check the transaction_state (@see tokenIsFromRegister)
      // It need a patch in janrain_capture module
      if ($user_created == $today) {
        $api = new FtvJanrainCaptureApi();
        $origin_id = $api->getOriginId();
        $api->setOriginId($capture_profile, $origin_id);
      }
    }
  }

  $user_profile = ftv_janrain_capture_check_user_profile($capture_profile);
  if (!empty($user_profile['missing_data'])) {
    $_SESSION['janrain_capture_missing_data'] = $user_profile['missing_data'];
  }
}

/**
 * Act on users when data is updated.
 *
 * This hook is executed immediately after the user profile is updated in
 * Capture and synchronized with the local Drupal user. By default this the
 * completion of this process will redirect the user to $origin. If you wish
 * to prevent this behavior you can do so by returning false from an
 * implementation of this hook.
 *
 * @param array $capture_profile
 *   The profile data returned from the user's Capture record
 * @param array $account
 *   The local Drupal user account being authenticated
 *
 * @return boolean
 *   If FALSE Drupal will not redirect the user to $origin
 */
function ftv_janrain_capture_janrain_capture_user_profile_updated($capture_profile, $account) {
  // Store in session Janrain Capture username
  // Used to retrieve Hi username.
  $_SESSION['janrain_capture_displayname'] = $capture_profile['displayName'];
  // Get the first picture (small format) provided by Janrain if available.
  if (isset($capture_profile['photos'][0]['value']) && !empty($capture_profile['photos'][0]['value'])) {
    $_SESSION['janrain_capture_photo'] = $capture_profile['photos'][0]['value'];
  }

  // Remove and rebuild array of missing data.
  unset($_SESSION['janrain_capture_missing_data']);
  $user_profile = ftv_janrain_capture_check_user_profile($capture_profile);
  if (!empty($user_profile['missing_data'])) {
    $_SESSION['janrain_capture_missing_data'] = $user_profile['missing_data'];
  }
}

/**
 * Add Capture attributes to sync to local user fields
 *
 * This hook allows modules to alter the user account object based on Janrain
 * Capture profile data. It is invoked whenever a user logs in or updates their
 * profile in Janrain Capture.
 *
 * The hook can be used in conjunction with Entity API module to set the values
 * of Field API fields on the user object, or without Entity API to alter any
 * properties (including fields, but the full array stucture of the field would
 * need to be provided) on the object.
 *
 * @param $account
 *   The user account to sync
 *
 * @param array $capture_profile
 *   The profile data returned from the user's Capture record
 */
function ftv_janrain_capture_janrain_capture_profile_sync($account, $capture_profile) {
  // Set Janrain Capture DisplayName as username or email
  $account->name = !empty($capture_profile['displayName']) ? $capture_profile['displayName'] : $capture_profile['email'];
}


/**
 * Returns a render array for the 'Register / Sign in' link for Janrain Capture.
 */
function ftv_janrain_capture_signin_link() {
  // drupal_add_library is invoked automatically when a form element has the
  // '#ajax' property, but since we are not rendering a form here, we have to
  // do it ourselves.
  drupal_add_library('system', 'drupal.ajax');

  $ftv_janrain_capture_form = variable_get('ftv_janrain_capture_form', array());

  // TODO : title is commented because fancybox need parameter - titleShow: false,
  $link = array(
    '#type' => 'link',
    '#title' => variable_get('ftv_janrain_capture_signin_link', t('Log in')),
    '#href' => janrain_capture_url(array('action' => $ftv_janrain_capture_form['signin_form_format'])),
    '#attributes' => array(
      // 'title' => variable_get('ftv_janrain_capture_signin_link', t('Log in')),
      'class' => array('janrain_capture_anchor', 'janrain_capture_signin'),
    ),
  );
  return $link;
}

/**
 * Returns a render array for the 'Register / Sign in' link for Janrain Capture.
 */
function ftv_janrain_capture_register_link() {
  // drupal_add_library is invoked automatically when a form element has the
  // '#ajax' property, but since we are not rendering a form here, we have to
  // do it ourselves.
  drupal_add_library('system', 'drupal.ajax');

  $ftv_janrain_capture_form = variable_get('ftv_janrain_capture_form', array());

  $link = array(
    '#type' => 'link',
    '#title' => variable_get('ftv_janrain_capture_register_link', t('Create new account')),
    '#href' => janrain_capture_url(array('action' => $ftv_janrain_capture_form['register_form_format'])),
    '#attributes' => array(
      // 'title' => variable_get('ftv_janrain_capture_register_link', t('Create new account')),
      'class' => array('janrain_capture_anchor', 'janrain_capture_register'),
    ),
  );
  return $link;
}

/**
 * Returns a render array for the 'Edit profile' link for Janrain Capture.
 */
function ftv_janrain_capture_profile_link() {
  // drupal_add_library is invoked automatically when a form element has the
  // '#ajax' property, but since we are not rendering a form here, we have to
  // do it ourselves.
  drupal_add_library('system', 'drupal.ajax');

  $link = array(
    '#type' => 'link',
    '#title' => variable_get('ftv_janrain_capture_profile_link', t('My account')),
    '#href' => 'janrain_capture/profile',
    '#options' => array(
      'absolute' => TRUE,
    ),
    '#attributes' => array(
      // 'title' => variable_get('ftv_janrain_capture_profile_link', t('My account')),
      // used for user missing data
      // 'rel' => array('edit_profile_workflow'),
      'class' => array('janrain_capture_anchor', 'janrain_capture_profile'),
    ),
  );

  $ftv_janrain_capture_form = variable_get('ftv_janrain_capture_form', array());

  // @see janrain_capture_profile() : suggest a patch....
  // remove profile string from vget because of the concatenation in
  // janrain_capture_profile() - 'action' => 'profile' . $method,
  $profile = str_replace('profile', '', $ftv_janrain_capture_form['profile_form_format']);

  if (!empty($profile)) {
    $link['#options']['query']['method'] = $profile;
  }

  return $link;
}

/**
 * Generates a 'Logout' link for Janrain Capture.
 */
function ftv_janrain_capture_render_logout_link() {
  // drupal_add_library is invoked automatically when a form element has the
  // '#ajax' property, but since we are not rendering a form here, we have to
  // do it ourselves.
  drupal_add_library('system', 'drupal.ajax');

  // This function duplicate janrain_capture_render_logout_link with
  // the appropriate text for the link.
  $logout = variable_get('ftv_janrain_capture_logout_link', t('Log out'));

  $janrain_capture_optional = variable_get('janrain_capture_optional', array());
  if ($janrain_capture_optional['capture_sso_address']) {
    $link = '<a href="javascript:CAPTURE.logout()" title="' . $logout . '" class="janrain_capture_logout">' . $logout . '</a>';
  }
  else {
    $link = l($logout, 'user/logout', array('#attributes' => array('title' => $logout, 'class' => 'janrain_capture_logout')));
  }
  return $link;
}


/**
 * Implements hook_theme().
 */
function ftv_janrain_capture_theme($existing, $type, $theme, $path) {
  $base = array(
    'file' => 'theme.inc',
    'path' => $path . '/theme',
  );

  return array(
    'ftv_janrain_capture_connection' => $base + array(
      'variables' => array('user_links_anonymous' => NULL, 'user_links_authenticated' => NULL),
      'template' => 'ftv-janrain-capture-connection',
    ),
    'ftv_janrain_capture_new_account' => array(
      'template' => 'theme/ftv-janrain-capture-new-account',
    ),
    'ftv_janrain_capture_signin' => $base + array(
      'variables' => array(),
    ),
    'ftv_janrain_capture_register' => $base + array(
      'variables' => array(),
    ),
    'ftv_janrain_capture_logout' => $base + array(
      'variables' => array(),
    ),
    'ftv_janrain_capture_profile' => $base + array(
      'variables' => array(),
    ),
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ftv_janrain_capture_form_janrain_capture_settings_alter(&$form, &$form_state, $form_id) {
  // Set advanced settings fieldset opened.
  $form['janrain_capture_optional']['#collapsed'] = FALSE;

  $ftv_janrain_capture_form = variable_get('ftv_janrain_capture_form', array());
  $form['ftv_janrain_capture_form'] = array(
    '#type' => 'fieldset',
    '#title' => t('FTV Form Settings'),
    '#tree' => TRUE,
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $form['ftv_janrain_capture_form']['register_form_format'] = array(
    '#type' => 'select',
    '#title' => t('Register Form Format'),
    '#default_value' => !empty($ftv_janrain_capture_form['register_form_format']) ? $ftv_janrain_capture_form['register_form_format'] : 'legacy_register_thin',
    '#options' => array(
      'legacy_register_thin' => 'Default (Thin)',
      'legacy_register_lite' => 'Lite',
      'legacy_register_long' => 'Long',
      'legacy_register_qualif' => 'Qualif',
      'legacy_register_pluzz' => 'Pluzz',
      'legacy_register_pluzzvad' => 'Pluzzvad',
    ),
    '#description' => t('Select the register form you need, must be the same than signin form.'),
  );
  $form['ftv_janrain_capture_form']['signin_form_format'] = array(
    '#type' => 'select',
    '#title' => t('Signin Form Format'),
    '#default_value' => !empty($ftv_janrain_capture_form['signin_form_format']) ? $ftv_janrain_capture_form['signin_form_format'] : 'signin',
    '#options' => array(
      'signin' => 'Default (Thin)',
      'signin_lite' => 'Lite',
      'signin_long' => 'Long',
      'signin_qualif' => 'Qualif',
      'signin_pluzz' => 'Pluzz',
      'signin_pluzzvad' => 'Pluzzvad',
    ),
    '#description' => t('Select the signin form you need, must be the same than register form.'),
  );
  $form['ftv_janrain_capture_form']['profile_form_format'] = array(
    '#type' => 'select',
    '#title' => t('Profile Form Format'),
    '#default_value' => !empty($ftv_janrain_capture_form['profile_form_format']) ? $ftv_janrain_capture_form['profile_form_format'] : 'profile',
    '#options' => array(
      'profile' => 'Default',
      'profile_long' => 'Long',
      'profile_qualif' => 'Qualif',
    ),
    '#description' => t('Select the form you need for janrain profile form'),
  );

  $form['ftv_janrain_capture_links'] = array(
    '#type' => 'fieldset',
    '#title' => t('FTV Form Links'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $form['ftv_janrain_capture_links']['ftv_janrain_capture_signin_link'] = array(
    '#type' => 'textfield',
    '#title' => t('Text for user signin link'),
    '#default_value' => variable_get('ftv_janrain_capture_signin_link', t('Log in')),
    '#description' => t('Text used for user signin link.'),
  );
  $form['ftv_janrain_capture_links']['ftv_janrain_capture_register_link'] = array(
    '#type' => 'textfield',
    '#title' => t('Text for user register link'),
    '#default_value' => variable_get('ftv_janrain_capture_register_link', t('Create new account')),
    '#description' => t('Text used for user register link.'),
  );
  $form['ftv_janrain_capture_links']['ftv_janrain_capture_profile_link'] = array(
    '#type' => 'textfield',
    '#title' => t('Text for user profile link'),
    '#default_value' => variable_get('ftv_janrain_capture_profile_link', t('My account')),
    '#description' => t('Text used for user profile link.'),
  );
  $form['ftv_janrain_capture_links']['ftv_janrain_capture_logout_link'] = array(
    '#type' => 'textfield',
    '#title' => t('Text for log out link'),
    '#default_value' => variable_get('ftv_janrain_capture_logout_link', t('Log out')),
    '#description' => t('Text used for user log out link.'),
  );

  $form['ftv_janrain_capture_misc'] = array(
    '#type' => 'fieldset',
    '#title' => t('FTV Janrain Capture - Misc'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  // TODO -- better do a configuration into hook_block
  $form['ftv_janrain_capture_misc']['ftv_janrain_capture_display_username'] = array(
    '#type' => 'checkbox',
    '#title' => t('Display Hello @username'),
    '#default_value' => variable_get('ftv_janrain_capture_display_username', TRUE),
    '#description' => t('This text is displayed above janrain connection block.'),
  );

  $form['#validate'][] = 'ftv_janrain_capture_form_janrain_capture_settings_validate';
}

/**
 * Validate FTV Janrain Capture Form.
 *
 * We force that register form must be the same that signin form because
 * register with the signin form is possible with Janrain.
 */
function ftv_janrain_capture_form_janrain_capture_settings_validate($form, &$form_state) {
  // Retrieve register form format.
  $register_form_format = $form_state['values']['ftv_janrain_capture_form']['register_form_format'];
  $register_form_format = end(explode('_', $register_form_format));

  // Retrieve signin form format.
  $signin_form_format = $form_state['values']['ftv_janrain_capture_form']['signin_form_format'];
  $signin_form_format = end(explode('_', $signin_form_format));
  // Default signin form corresponding to signin_thin form.
  $signin_form_format = ($signin_form_format == 'signin') ? 'thin' : $signin_form_format;

  // Check if register and signin slected forms are the same.
  if ($register_form_format != $signin_form_format) {
    form_set_error('signin_form_format', 'Signin form must be the same than register form');
    form_set_error('register_form_format', 'Register form must be the same than signin form');
  }
}

/**
 * Compare user profile fields with required fields.
 *
 * Janrain Federate allow user already connected on SSO server to log in
 * automatically when user arrive on the website
 * A function javascript check_login will log in the user
 * FTV has differents available profile forms for Janrain Capture
 * (@see ftv_janrain_capture_form)
 * This function compare the required fields on the site with his Janrain
 * Capture profile
 *
 * @param array $capture_profile
 *   The profile data returned from the user's Capture record
 *
 * @return array
 *   A array of the profile
 */
function ftv_janrain_capture_check_user_profile($capture_profile = NULL) {
  // Get Janrain Capture profile.
  if (empty($capture_profile)) {
    $api = new JanrainCaptureApi();
    $capture_profile = $api->loadUserEntity();
    $capture_profile = $capture_profile['result'];
  }

  $ftv_janrain_capture_form = variable_get('ftv_janrain_capture_form', array());
  $required_fields = _ftv_janrain_capture_form_structure($ftv_janrain_capture_form['register_form_format']);
  $missing_data = array();
  $has_data = array();

  // Check for each required fields if user has filled a value.
  foreach ($required_fields as $field_name => $field_label) {
    // Check if group of fields @see _ftv_janrain_capture_form_structure().
    if (is_array($field_label)) {
      foreach ($field_label as $sub_field_name => $sub_field_label) {
        if (array_key_exists($sub_field_name, $capture_profile[$field_name])) {
          if (empty($capture_profile[$field_name][$sub_field_name])) {
            $missing_data[$sub_field_name] = $sub_field_label;
          }
          else {
            $has_data[$sub_field_name] = $sub_field_label;
          }
        }
      }
    }
    // Check if value of one field.
    elseif (array_key_exists($field_name, $capture_profile)) {
      if (empty($capture_profile[$field_name])) {
        $missing_data[$field_name] = $field_label;
      }
      else {
        $has_data[$field_name] = $field_label;
      }
    }
  }

  $user_profile = array(
    'required_fields' => $required_fields,
    'missing_data'    => $missing_data,
    'has_data'        => $has_data,
  );

  return $user_profile;
}


/**
 * Return required fields for each Janrain Capture forms.
 *
 * @param string $janrain_form_id
 *   The name of the Janrain Capture register form
 *
 * @return array
 *   array with forms and required fields
 */
function _ftv_janrain_capture_form_structure($janrain_form_id = NULL) {
  $jarain_capture_forms = array(
    'legacy_register_thin' => array(
      'email'                     => t('E-mail'),
      'displayName'               => t('Username'),
    ),
    'legacy_register_lite' => array(
      'email'                     => t('E-mail'),
      'displayName'               => t('Username'),
    ),
    'legacy_register_long' => array(
      'email'                     => t('E-mail'),
      'displayName'               => t('Username'),
      'gender'                    => t('Gender'),
      'givenName'                 => t('Given name'),
      'familyName'                => t('Family name'),
      'birthday'                  => t('Birthday date'),
      'primaryAddress'            => array(
        'address1'   => t('Address'),
        'postalCode' => t('Postal code'),
        'city'       => t('City'),
        'country'    => t('Country'),
      ),
    ),
    'legacy_register_qualif' => array(
      'email'                     => t('E-mail'),
      'gender'                    => t('Gender'),
      'birthday'                  => t('Birthday date'),
      'primaryAddress'            => array(
        'postalCode' => t('Postal code'),
        'country'    => t('Country'),
      ),
    ),
    'legacy_register_pluzz' => array(
      'email'                     => t('E-mail'),
      'displayName'               => t('Username'),
    ),
    'legacy_register_pluzzvad' => array(
      'email'                     => t('E-mail'),
    ),
  );

  if (array_key_exists($janrain_form_id, $jarain_capture_forms)) {
    return $jarain_capture_forms[$janrain_form_id];
  }

  return $jarain_capture_forms;
}
