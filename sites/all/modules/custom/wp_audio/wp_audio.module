<?php

/**
 * Implements hook_theme();
 */
function wp_audio_theme() {
  return array(
    'wp_audio_file' => array(
      'render element' => 'item'
    ),
  );
}


/**
 * Implements hook_field_formatter_info().
 */
function wp_audio_field_formatter_info() {
  return array(
    'wp_audio_file' => array(
      'label' => t('Audio player'),
      'field types' => array('file'),
      'settings' => array('player_width' => '420'),
    ),
  );
}

/**
 * Implements hook_field_formatter_settings_form().
 * @param $field
 * @param $instance
 * @param $view_mode
 * @param $form
 * @param $form_state
 * @return array
 */
function wp_audio_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $element['player_width'] = array(
    '#title' => t('Audio player width'),
    '#type' => 'textfield',
    '#field_suffix' => 'px',
    '#default_value' => $settings['player_width'],
    '#element_validate' => array('element_validate_integer_positive'),
    '#size' => '20',
  );

  return $element;
}

/**
 * Implements hook_field_formatter_view().
 */
function wp_audio_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();

  switch ($display['type']) {
    case 'wp_audio_file':
      foreach ($items as $delta => $item) {
        $player_width = isset($display['settings']['player_width']) ? $display['settings']['player_width'] : 420;
        $element[$delta] = array(
          '#theme' => 'wp_audio_file',
          '#file' => (object) $item,
          '#attached' => array(
            'js' => array(
              base_path() . drupal_get_path('module', 'wp_audio') . '/audio-player.js' => array(
                'preprocess' => FALSE,
                'weight' => 1
              ),
              array(
                'data' => 'if (typeof(AudioPlayer) !== \'undefined\') AudioPlayer.setup("' . base_path() . drupal_get_path('module', 'wp_audio') . '/player.swf", {width: ' . $player_width .'});',
                'type' => 'inline',
                'weight' => 2
              )
            )
          )
        );
      }
      break;
  }
  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function wp_audio_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $summary = array();

  if ($settings['player_width']) {
    $summary[] = t('Player width: @widthpx', array('@width' => $settings['player_width']));
  }
  return implode('<br />', $summary);
}

/**
 * Audio file formatter theming function
 * @param $vars
 * @return string
 */
function theme_wp_audio_file($vars) {
  $file = $vars['item']['#file'];
  static $counter = 0;
  $output = '';
  if (!empty($file)) {
    $url = file_create_url($file->uri);
    $fall_back = l(t('Audio file'), $url);
    $counter++;
    $output .= '<p class="wp_audio" id="audio_'. $counter . '"> ' . $fall_back . '</p><script type="text/javascript">if (typeof(AudioPlayer) !== \'undefined\') AudioPlayer.embed("audio_'. $counter . '", {soundFile: "' . check_url($url) . '", loader: "269FE3"}); </script> ';
  }
  return $output;
}
