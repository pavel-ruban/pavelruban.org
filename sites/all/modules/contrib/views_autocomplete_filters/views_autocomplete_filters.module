<?php
/**
 * Implementation of hook_menu().
 */
function views_autocomplete_filters_menu() {
  $items = array();
  $items['autocomplete_filter'] = array(
    'title' => 'Autocomplete Filters',
    'page callback' => 'views_autocomplete_filter',
    'access arguments' => array('access content'),
    'file' => 'views_autocomplete_filters.inc',
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implementation of hook_views_api().
 */
function views_autocomplete_filters_views_api() {
  return array(
    'api' => 3.0,
  );
}

/**
 * Implementation of hook_form_FORMID_alter() for views_exposed_form.
 */
function views_autocomplete_filters_form_views_exposed_form_alter(&$form, $form_state) {
  // Go through each filter checking for a 'autocomplete' setting
  foreach ($form_state['view']->filter as $field => $filter) {
    if ($filter->options['exposed']) {
      // If using selective filters, filter the value_options based on view results
      if (isset($filter->options['expose']['autocomplete_filter']) && !empty($filter->options['expose']['autocomplete_filter'])) {
        $field_id = $form['#info']["filter-$field"]['value'];
        unset($form[$field_id]['#default_value']);
        $form[$field_id]['#autocomplete_path'] = 'autocomplete_filter/'.$field.'/'.$form_state['view']->name.'/'.$form_state['view']->current_display;
      }
    }
  }
}